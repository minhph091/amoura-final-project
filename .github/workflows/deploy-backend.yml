name: Deploy Spring Boot Backend

on:
  push:
    branches: [production]
    paths: ['backend/**']

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: amoura_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build project
      working-directory: ./backend
      run: |
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests
    - name: Start Spring Boot app in background
      working-directory: ./backend
      run: |
        nohup java -jar target/amoura-0.0.1-SNAPSHOT.jar --spring.profiles.active=test > server.log 2>&1 &
    - name: Wait for Spring Boot app to start
      run: |
        echo "Waiting for app to start on port 8080..."
        for i in {1..30}; do
          nc -z localhost 8080 && echo "App started!" && exit 0
          sleep 3
        done
        echo "App failed to start" && exit 1
    - name: Run All Tests (unit + integration + e2e)
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/amoura_test
        SPRING_DATASOURCE_USERNAME: test_user
        SPRING_DATASOURCE_PASSWORD: test_password
      run: |
        ./mvnw test
    - name: Print server logs if failed
      if: failure()
      run: cat backend/server.log

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test  # Chỉ chạy nếu job test thành công
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build JAR file for production
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: prod
      run: |
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests
    - name: Get JAR file name
      id: get_jar
      working-directory: ./backend/target
      run: echo "JAR_NAME=$(ls *.jar | head -n 1)" >> $GITHUB_OUTPUT
    - name: Stop Remote Service and Clean up
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo systemctl stop amoura
          rm -rf ${{ secrets.DEPLOY_PATH }}/backend
    - name: Upload JAR file to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./backend/target/${{ steps.get_jar.outputs.JAR_NAME }}"
        target: "${{ secrets.DEPLOY_PATH }}"
        overwrite: true
        strip_components: 3
    - name: Start Remote Service
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          # Remove any existing amoura.jar (file or directory)
          rm -rf amoura.jar
          # Move the JAR file and rename it
          mv ${{ steps.get_jar.outputs.JAR_NAME }} amoura.jar
          # Set environment variable for production profile
          sudo systemctl set-environment SPRING_PROFILES_ACTIVE=prod
          sudo systemctl start amoura